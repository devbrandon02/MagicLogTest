var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.038,1,1.809]],["body/controllers/AppController.html",[0,1.616,1,2.815,2,1.272,3,0.43,4,0.363,5,0.363,6,2.958,7,0.653,8,1.455,9,4.346,10,1.57,11,0.04,12,0.828,13,3.604,14,1.145,15,1.616,16,0.546,17,0.574,18,2.445,19,2.958,20,0.43,21,0.128,22,2.216,23,1.962,24,1.272,25,3.604,26,0.031,27,0.031]],["title/modules/AppModule.html",[28,1.038,29,1.809]],["body/modules/AppModule.html",[1,2.768,2,1.392,3,0.343,4,0.29,5,0.29,11,0.04,16,0.625,17,0.458,18,2.548,19,2.36,20,0.343,21,0.102,26,0.027,27,0.027,28,1.589,29,3.513,30,1.253,31,1.253,32,1.565,33,1.565,34,1.253,35,2.451,36,1.565,37,2.36,38,2.36,39,2.36,40,2.855,41,2.855,42,2.548,43,2.147,44,1.565,45,1.397,46,2.875,47,2.425,48,2.875,49,2.875,50,2.875,51,2.875]],["title/injectables/AppService.html",[18,1.43,52,0.533]],["body/injectables/AppService.html",[3,0.454,4,0.384,5,0.384,7,0.69,8,1.507,9,4.434,11,0.04,12,0.875,14,1.21,15,1.673,16,0.454,17,0.607,18,2.303,20,0.454,21,0.135,24,1.344,26,0.032,27,0.032,52,0.859,53,1.492,54,3.126,55,3.808,56,3.808,57,3.808]],["title/controllers/AuthController.html",[0,1.038,58,1.809]],["body/controllers/AuthController.html",[0,1.11,2,1.11,3,0.375,4,0.317,5,0.317,7,0.57,8,1.332,10,1.37,11,0.041,12,0.722,14,0.999,16,0.599,17,0.501,20,0.375,21,0.111,22,1.933,23,1.712,24,1.11,26,0.029,27,0.029,58,2.576,59,2.581,60,2.21,61,3.144,62,3.439,63,3.144,64,3.089,65,4.189,66,3.439,67,3.144,68,1.37,69,1.11,70,0.899,71,1.232,72,3.439,73,2.21,74,2.21,75,2.21,76,1.528,77,2.21,78,2.21,79,2.036,80,2.581,81,3.144,82,3.144,83,3.144,84,3.144,85,3.144,86,3.144]],["title/modules/AuthModule.html",[28,1.038,40,1.602]],["body/modules/AuthModule.html",[2,1.311,3,0.315,4,0.266,5,0.266,11,0.041,16,0.626,17,0.421,20,0.315,21,0.094,26,0.025,27,0.025,28,1.518,30,1.15,31,1.15,32,1.437,33,1.437,34,1.15,35,2.342,36,2.342,40,3.037,42,2.48,43,2.023,44,1.437,45,1.282,47,2.284,58,2.644,79,2.736,80,2.166,87,2.166,88,2.166,89,2.639,90,2.166,91,2.779,92,2.639,93,2.639,94,1.855,95,3.715,96,1.623,97,2.639,98,2.639,99,2.639,100,2.639,101,2.639,102,2.166,103,2.166,104,2.639,105,2.639,106,2.639]],["title/injectables/AuthService.html",[52,0.533,79,1.43]],["body/injectables/AuthService.html",[3,0.259,4,0.219,5,0.219,7,0.394,8,1.026,11,0.041,12,0.885,14,1.026,15,1.685,16,0.509,17,0.346,20,0.259,21,0.077,24,1.36,26,0.022,27,0.022,52,0.585,53,0.852,62,3.162,66,1.784,68,1.679,69,1.505,70,1.102,71,1.51,79,1.569,94,1.528,107,1.784,108,2.08,109,3.229,110,1.569,111,2.173,112,2.08,113,4.943,114,2.173,115,3.229,116,2.173,117,2.801,118,1.758,119,3.229,120,3.852,121,2.173,122,1.758,123,2.173,124,2.27,125,2.173,126,2.27,127,2.322,128,2.368,129,2.173,130,2.173,131,3.229,132,1.336,133,3.229,134,2.173,135,4.264,136,2.173,137,2.173,138,2.65,139,2.27,140,2.173,141,3.229,142,1.784,143,2.173,144,2.173,145,2.173,146,2.173,147,1.784,148,2.173,149,1.528,150,2.173,151,1.056,152,2.173,153,2.173,154,2.173,155,2.173,156,2.173]],["title/classes/CreateProductDto.html",[21,0.104,157,1.602]],["body/classes/CreateProductDto.html",[3,0.357,4,0.302,5,0.302,7,0.542,10,2.146,11,0.04,12,1.131,15,1.738,16,0.483,20,0.357,21,0.144,26,0.028,27,0.028,69,1.621,70,1.408,151,1.454,157,2.206,158,1.839,159,4.224,160,2.456,161,2.206,162,4.594,163,4.594,164,3.771,165,3.326,166,2.991,167,4.924,168,5.146,169,2.991,170,2.991,171,2.991,172,1.304,173,2.103,174,3.23,175,2.103,176,2.103,177,1.839,178,3.326]],["title/classes/CreateUserDto.html",[21,0.104,179,1.602]],["body/classes/CreateUserDto.html",[3,0.334,4,0.282,5,0.282,7,0.507,10,2.087,11,0.04,12,1.1,15,1.835,16,0.462,20,0.334,21,0.137,26,0.026,27,0.026,69,1.566,70,1.369,71,1.517,122,2.417,132,2.729,142,3.178,151,2.64,158,1.721,161,2.108,165,2.297,172,1.22,173,3.12,174,3.12,175,1.967,176,1.967,177,1.721,178,2.297,179,2.108,180,4.127,181,2.297,182,2.799,183,2.799,184,2.297,185,2.799,186,3.871,187,2.721,188,3.871,189,3.871,190,3.871,191,3.871,192,2.799,193,2.297]],["title/injectables/JwtAuthGuard.html",[52,0.533,76,1.43]],["body/injectables/JwtAuthGuard.html",[3,0.476,4,0.403,5,0.403,11,0.039,16,0.582,17,0.637,20,0.476,21,0.142,26,0.033,27,0.033,52,0.885,53,1.565,76,2.372,96,2.455,194,3.278,195,3.278,196,3.431,197,4.881,198,3.993]],["title/injectables/JwtStrategy.html",[52,0.533,91,1.602]],["body/injectables/JwtStrategy.html",[3,0.363,4,0.307,5,0.307,7,0.551,8,1.302,11,0.041,12,0.941,14,0.966,16,0.553,17,0.485,20,0.363,21,0.108,24,1.073,26,0.028,27,0.028,52,0.743,53,1.192,68,1.325,69,1.073,70,0.869,71,1.192,91,2.231,96,1.869,102,2.496,103,2.496,108,2.019,110,2.251,118,1.656,122,1.656,147,3.363,151,1.478,196,2.88,199,2.496,200,4.096,201,4.096,202,3.04,203,4.096,204,3.04,205,3.04,206,3.04,207,3.04,208,2.496,209,2.496,210,3.04,211,3.04,212,3.04,213,3.04,214,2.137,215,3.04,216,3.04,217,1.869,218,3.04,219,3.04,220,3.04]],["title/injectables/PrismaService.html",[52,0.533,221,1.602]],["body/injectables/PrismaService.html",[3,0.428,4,0.362,5,0.362,7,0.65,8,1.451,11,0.04,12,0.824,14,1.14,16,0.545,17,0.572,20,0.428,21,0.127,26,0.031,27,0.031,52,0.828,53,1.406,108,2.188,128,2.205,172,1.563,196,3.209,221,2.485,222,2.944,223,5.021,224,5.578,225,3.586,226,3.586,227,3.586]],["title/controllers/ProductController.html",[0,1.038,228,1.809]],["body/controllers/ProductController.html",[0,0.692,2,0.692,3,0.234,4,0.198,5,0.198,7,0.355,8,0.949,10,1.577,11,0.041,12,0.832,14,1.15,15,1.872,16,0.52,17,0.312,20,0.234,21,0.069,23,1.067,24,1.429,26,0.02,27,0.02,60,1.378,68,1.577,69,1.277,70,0.854,71,1.419,73,1.378,74,1.378,75,1.378,76,0.953,77,1.378,78,1.378,108,2.197,110,0.953,117,1.837,118,1.971,126,1.378,127,1.627,157,2.204,217,2.225,228,1.837,229,1.609,230,1.96,231,2.452,232,3.619,233,2.987,234,1.96,235,3.919,236,1.96,237,1.96,238,2.987,239,1.96,240,4.357,241,4.357,242,3.577,243,2.987,244,1.96,245,4.048,246,4.048,247,1.96,248,1.96,249,1.96,250,1.609,251,1.96,252,2.971,253,1.609,254,1.452,255,1.609,256,1.205,257,1.609,258,1.96,259,1.96,260,2.452,261,1.609,262,1.96,263,2.452,264,1.96,265,1.96,266,1.96,267,1.96,268,1.96,269,2.987,270,1.96,271,2.452,272,1.96,273,1.609,274,1.96,275,1.96]],["title/modules/ProductModule.html",[28,1.038,41,1.602]],["body/modules/ProductModule.html",[2,1.487,3,0.378,4,0.32,5,0.32,11,0.04,16,0.601,17,0.505,20,0.378,21,0.112,26,0.029,27,0.029,28,1.67,30,1.382,31,1.382,32,1.727,33,1.727,34,1.382,35,2.576,36,2.576,41,2.998,43,2.294,44,1.727,45,1.541,47,1.95,228,2.909,254,2.82,255,2.603,276,2.603,277,2.603,278,2.603,279,3.171,280,3.459,281,2.603,282,3.171]],["title/injectables/ProductService.html",[52,0.533,254,1.43]],["body/injectables/ProductService.html",[3,0.227,4,0.192,5,0.192,7,0.344,8,0.927,11,0.041,12,0.915,14,1.128,15,1.6,16,0.513,17,0.303,20,0.227,21,0.067,22,1.168,23,1.034,24,1.405,26,0.02,27,0.02,52,0.529,53,0.745,68,1.735,69,1.516,70,1.297,71,1.561,108,2.124,110,0.923,127,1.588,128,1.168,149,2.05,157,2.339,164,2.394,172,0.828,187,1.335,214,1.335,217,2.183,221,2.168,231,2.394,242,2.394,254,1.417,256,1.168,257,1.559,271,3.269,283,1.559,284,2.916,285,2.916,286,1.559,287,1.9,288,2.394,289,2.916,290,1.9,291,4.296,292,1.9,293,2.916,294,1.9,295,1.9,296,2.916,297,1.9,298,1.559,299,2.916,300,1.559,301,2.916,302,1.9,303,1.9,304,1.559,305,1.559,306,1.559,307,1.559,308,1.559,309,1.9,310,2.916,311,3.55,312,3.55,313,1.9,314,2.916,315,2.394,316,2.916,317,3.55,318,3.55,319,1.9,320,1.9,321,1.9]],["title/classes/SignInWithCredentialDto.html",[21,0.104,64,1.809]],["body/classes/SignInWithCredentialDto.html",[3,0.416,4,0.351,5,0.351,7,0.632,10,1.953,11,0.04,12,1.03,15,1.845,16,0.416,20,0.416,21,0.159,26,0.031,27,0.031,64,2.755,70,1.281,122,2.697,132,3.046,158,2.143,161,2.44,173,3.482,174,3.15,175,2.45,176,2.45,177,2.143,184,2.861,193,2.861,322,4.066,323,2.861,324,3.485,325,3.485]],["title/controllers/UsersController.html",[0,1.038,326,1.809]],["body/controllers/UsersController.html",[0,0.841,2,0.841,3,0.284,4,0.24,5,0.24,7,0.432,8,1.098,10,1.771,11,0.041,12,0.934,14,1.292,16,0.564,17,0.38,20,0.284,21,0.084,23,1.298,24,1.434,26,0.024,27,0.024,60,1.676,68,1.771,69,1.434,70,1.162,71,1.593,72,2.836,73,1.676,74,1.676,75,1.676,76,1.158,77,1.676,78,1.676,108,2.315,110,1.158,112,1.506,117,1.466,118,2.213,126,1.676,127,1.298,151,2.397,172,1.039,179,2.427,217,1.466,235,3.336,250,1.957,252,1.957,256,1.466,260,2.836,261,2.836,263,1.957,273,1.957,326,2.124,327,1.957,328,3.455,329,3.455,330,3.455,331,2.383,332,2.383,333,2.383,334,2.383,335,2.383,336,2.383,337,2.383,338,2.383,339,1.957,340,1.957,341,2.383,342,2.383,343,2.383,344,2.383,345,2.383,346,2.383,347,2.383,348,2.383,349,2.383]],["title/modules/UsersModule.html",[28,1.038,42,1.43]],["body/modules/UsersModule.html",[2,1.487,3,0.378,4,0.32,5,0.32,11,0.04,16,0.601,17,0.505,20,0.378,21,0.112,26,0.029,27,0.029,28,1.67,30,1.382,31,1.382,32,1.727,33,1.727,34,1.382,35,2.576,36,2.576,42,2.676,43,2.294,44,1.727,45,1.541,47,1.95,112,2.529,280,3.459,281,2.603,326,2.909,340,2.603,350,2.603,351,2.603,352,2.603,353,3.171,354,3.171]],["title/injectables/UsersService.html",[52,0.533,112,1.282]],["body/injectables/UsersService.html",[3,0.211,4,0.179,5,0.179,7,0.321,8,0.878,11,0.041,12,1.013,14,1.323,15,1.556,16,0.496,17,0.282,20,0.211,21,0.063,22,1.09,24,1.556,26,0.019,27,0.019,52,0.501,53,0.695,68,1.813,69,1.556,70,1.19,71,1.631,108,2.339,110,0.861,112,1.204,117,2.36,118,2.266,122,1.85,124,1.943,127,1.505,128,2.089,132,1.09,138,1.455,139,1.246,149,1.943,151,2.237,172,0.772,179,2.266,187,1.943,214,1.246,221,2.09,256,1.09,286,1.455,288,2.269,298,1.455,304,1.455,305,1.455,306,2.269,307,1.455,308,1.455,339,1.455,355,1.455,356,2.764,357,3.838,358,2.764,359,2.764,360,2.764,361,1.772,362,2.764,363,1.772,364,1.772,365,2.764,366,1.772,367,2.764,368,1.772,369,2.764,370,1.772,371,1.772,372,1.772,373,1.772,374,2.764,375,2.764,376,2.764,377,1.772,378,2.764,379,2.764,380,1.772,381,1.772,382,1.772,383,1.772,384,1.772,385,1.772,386,1.772,387,1.772,388,1.772,389,1.772,390,1.772,391,1.772,392,3.398,393,1.772,394,1.772,395,1.772,396,1.772,397,1.455,398,1.772,399,1.772]],["title/coverage.html",[400,2.816]],["body/coverage.html",[0,1.696,1,1.734,5,0.284,6,2.315,11,0.04,18,1.37,21,0.158,26,0.026,27,0.026,34,1.229,52,0.968,54,2.315,58,1.734,59,2.315,64,1.734,70,0.806,76,1.37,79,1.37,91,1.536,107,2.315,112,1.229,139,1.982,157,1.536,159,2.315,160,2.315,179,1.536,180,2.315,181,2.315,194,2.315,195,2.315,199,2.315,221,1.536,222,2.315,228,1.734,229,2.315,254,1.37,283,2.315,322,2.315,323,2.315,326,1.734,327,2.315,355,2.315,400,1.982,401,2.315,402,2.82,403,2.82,404,5.802,405,4.804,406,2.315,407,2.82,408,3.891,409,4.456,410,3.891,411,4.456,412,2.82,413,2.82,414,2.82]],["title/dependencies.html",[31,1.541,415,2.02]],["body/dependencies.html",[11,0.041,17,0.569,21,0.161,26,0.031,27,0.031,31,1.555,94,2.509,96,2.194,124,2.509,172,1.555,177,2.194,208,2.93,209,2.93,253,2.93,300,2.93,416,5.009,417,3.569,418,3.569,419,3.569,420,3.569,421,3.569,422,3.569,423,3.569,424,3.569,425,3.569,426,3.569,427,3.569,428,2.93,429,3.569,430,3.569,431,3.569,432,3.569,433,3.569,434,3.569]],["title/miscellaneous/functions.html",[435,2.02,436,2.903]],["body/miscellaneous/functions.html",[7,0.802,11,0.035,26,0.035,27,0.035,34,2.4,406,3.631,435,3.631,436,3.631,437,4.423]],["title/index.html",[7,0.446,438,2.461,439,2.461]],["body/index.html",[4,0.187,11,0.037,26,0.019,27,0.019,45,2.181,315,2.348,397,2.348,400,1.302,401,2.348,440,1.852,441,1.852,442,3.494,443,2.86,444,1.852,445,1.852,446,1.852,447,1.852,448,2.86,449,1.52,450,3.494,451,1.852,452,1.852,453,1.852,454,3.929,455,1.852,456,3.929,457,4.833,458,1.852,459,4.679,460,1.852,461,1.852,462,1.852,463,1.852,464,2.86,465,1.852,466,3.494,467,1.852,468,2.86,469,1.852,470,1.852,471,1.852,472,1.852,473,1.852,474,3.929,475,4.833,476,4.489,477,1.852,478,2.86,479,1.852,480,1.852,481,1.852,482,1.852,483,1.852,484,4.489,485,2.86,486,3.929,487,1.852,488,2.86,489,1.852,490,1.852,491,2.86,492,4.247,493,3.929,494,1.852,495,2.86,496,1.852,497,1.852,498,1.852,499,1.852,500,3.929,501,1.852,502,1.852,503,1.852,504,1.852,505,1.852,506,2.86,507,1.852,508,1.852,509,1.852,510,1.852,511,1.852,512,2.86,513,1.852,514,1.852,515,1.852,516,2.86,517,1.852,518,1.852,519,3.226,520,1.852,521,1.852,522,1.852,523,1.852,524,1.852,525,1.852,526,1.852,527,1.852,528,2.86,529,1.852,530,1.852,531,1.852,532,1.852,533,3.494,534,1.852,535,1.852,536,1.852,537,1.852,538,1.852,539,1.852,540,2.86,541,1.852,542,1.852,543,1.852,544,1.852,545,1.852,546,2.86,547,1.852,548,1.852,549,1.852,550,2.86,551,2.86,552,1.852,553,1.852,554,1.852,555,1.852,556,1.852,557,1.852,558,1.852,559,1.852,560,1.852,561,1.852,562,1.852,563,1.52,564,1.852,565,1.852,566,1.852,567,1.852,568,1.852,569,1.852,570,1.52]],["title/modules.html",[30,1.746]],["body/modules.html",[11,0.034,26,0.034,27,0.034,29,2.523,30,1.788,40,2.235,41,2.235,42,1.994,519,4.55,571,5.542,572,5.542,573,5.542]],["title/overview.html",[574,3.288]],["body/overview.html",[2,0.991,11,0.039,18,2.161,26,0.026,27,0.026,28,0.991,29,3.435,30,1.224,31,1.224,32,1.53,33,1.53,34,1.224,35,1.53,36,1.53,37,2.306,38,2.306,39,2.306,40,3.042,41,2.834,42,2.593,43,2.113,44,1.53,45,1.365,53,1.101,79,2.593,87,2.306,88,2.306,90,2.306,91,2.421,112,2.325,158,1.727,254,2.593,276,2.306,277,2.306,278,2.306,350,2.306,351,2.306,352,2.306,574,2.306,575,3.881,576,2.809,577,2.809]],["title/properties.html",[161,1.925,415,2.02]],["body/properties.html",[11,0.04,26,0.035,27,0.035,161,2.366,428,3.567,449,3.567,563,3.567,570,3.567,578,4.345,579,4.345]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/SignInWithCredentialDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":428,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.14.2",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["0.3.24",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":410,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["11.0.0",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["11.0.5",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["1h",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{}}}],["3",{"_index":577,"title":{},"body":{"overview.html":{}}}],["4",{"_index":575,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["409",{"_index":308,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["5",{"_index":381,"title":{},"body":{"injectables/UsersService.html":{}}}],["6.0.0",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["6.7.0",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":576,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["_authservice",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["_productservice",{"_index":259,"title":{},"body":{"controllers/ProductController.html":{}}}],["_usersservice",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{}}}],["access",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["again",{"_index":398,"title":{},"body":{"injectables/UsersService.html":{}}}],["allowed",{"_index":189,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["allowing",{"_index":507,"title":{},"body":{"index.html":{}}}],["already",{"_index":304,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["amazing",{"_index":556,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":476,"title":{},"body":{"index.html":{}}}],["applications",{"_index":448,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":195,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/jwt",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["authcontroller",{"_index":58,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":198,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('jwt",{"_index":197,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":563,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorized",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":79,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":495,"title":{},"body":{"index.html":{}}}],["backers",{"_index":557,"title":{},"body":{"index.html":{}}}],["based",{"_index":490,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":380,"title":{},"body":{"injectables/UsersService.html":{}}}],["board",{"_index":549,"title":{},"body":{"index.html":{}}}],["body",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":573,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":571,"title":{},"body":{"modules.html":{}}}],["building",{"_index":443,"title":{},"body":{"index.html":{}}}],["buyer",{"_index":191,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["catch",{"_index":391,"title":{},"body":{"injectables/UsersService.html":{}}}],["channel",{"_index":521,"title":{},"body":{"index.html":{}}}],["check",{"_index":484,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInWithCredentialDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/SignInWithCredentialDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":158,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInWithCredentialDto.html":{},"overview.html":{}}}],["clicks",{"_index":506,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":489,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":87,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":88,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":276,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_exports",{"_index":278,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":277,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":350,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":351,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":352,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":513,"title":{},"body":{"index.html":{}}}],["conflictexception",{"_index":371,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log('payload",{"_index":216,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('user_auth",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(prisma",{"_index":286,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":314,"title":{},"body":{"injectables/ProductService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('products",{"_index":258,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('user",{"_index":341,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":527,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":400,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":356,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(createuserdto",{"_index":362,"title":{},"body":{"injectables/UsersService.html":{}}}],["created",{"_index":388,"title":{},"body":{"injectables/UsersService.html":{}}}],["createproduct",{"_index":231,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["createproduct(@body",{"_index":262,"title":{},"body":{"controllers/ProductController.html":{}}}],["createproduct(createproductdto",{"_index":289,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproduct(productdata",{"_index":234,"title":{},"body":{"controllers/ProductController.html":{}}}],["createproductdto",{"_index":157,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["createproductdto.price",{"_index":309,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproductdto.sku",{"_index":303,"title":{},"body":{"injectables/ProductService.html":{}}}],["createuser",{"_index":328,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(@body",{"_index":343,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuser(userdata",{"_index":331,"title":{},"body":{"controllers/UsersController.html":{}}}],["createuserdto",{"_index":179,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":385,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.name",{"_index":384,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.role",{"_index":386,"title":{},"body":{"injectables/UsersService.html":{}}}],["creating",{"_index":396,"title":{},"body":{"injectables/UsersService.html":{}}}],["credential.dto",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["credential.dto.ts",{"_index":323,"title":{},"body":{"classes/SignInWithCredentialDto.html":{},"coverage.html":{}}}],["credential.dto.ts:5",{"_index":324,"title":{},"body":{"classes/SignInWithCredentialDto.html":{}}}],["credential.dto.ts:9",{"_index":325,"title":{},"body":{"classes/SignInWithCredentialDto.html":{}}}],["credentials",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["data",{"_index":383,"title":{},"body":{"injectables/UsersService.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/ProductController.html":{},"classes/SignInWithCredentialDto.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":523,"title":{},"body":{"index.html":{}}}],["defaultsecretkey",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/SignInWithCredentialDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":474,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":494,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":485,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":505,"title":{},"body":{"index.html":{}}}],["description",{"_index":449,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":460,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":535,"title":{},"body":{"index.html":{}}}],["discord",{"_index":520,"title":{},"body":{"index.html":{}}}],["dive",{"_index":522,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":401,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/create",{"_index":256,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/sign",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["e2e",{"_index":469,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":444,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":482,"title":{},"body":{"index.html":{}}}],["email",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/SignInWithCredentialDto.html":{},"injectables/UsersService.html":{}}}],["ensure",{"_index":480,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":539,"title":{},"body":{"index.html":{}}}],["error",{"_index":392,"title":{},"body":{"injectables/UsersService.html":{}}}],["error('an",{"_index":393,"title":{},"body":{"injectables/UsersService.html":{}}}],["example",{"_index":456,"title":{},"body":{"index.html":{}}}],["existing_user",{"_index":376,"title":{},"body":{"injectables/UsersService.html":{}}}],["existingproduct",{"_index":301,"title":{},"body":{"injectables/ProductService.html":{}}}],["exists",{"_index":305,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["experience",{"_index":525,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/SignInWithCredentialDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":253,"title":{},"body":{"controllers/ProductController.html":{},"dependencies.html":{}}}],["extends",{"_index":196,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{}}}],["extractjwt",{"_index":206,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":212,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":214,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["fast",{"_index":498,"title":{},"body":{"index.html":{}}}],["features",{"_index":509,"title":{},"body":{"index.html":{}}}],["few",{"_index":500,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/SignInWithCredentialDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filters",{"_index":295,"title":{},"body":{"injectables/ProductService.html":{}}}],["filters.maxprice",{"_index":318,"title":{},"body":{"injectables/ProductService.html":{}}}],["filters.minprice",{"_index":317,"title":{},"body":{"injectables/ProductService.html":{}}}],["filters.search",{"_index":312,"title":{},"body":{"injectables/ProductService.html":{}}}],["filters.sellerid",{"_index":310,"title":{},"body":{"injectables/ProductService.html":{}}}],["findall",{"_index":357,"title":{},"body":{"injectables/UsersService.html":{}}}],["findallproducts",{"_index":284,"title":{},"body":{"injectables/ProductService.html":{}}}],["findallproducts(filters",{"_index":292,"title":{},"body":{"injectables/ProductService.html":{}}}],["findbyemail",{"_index":358,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":365,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid",{"_index":359,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(id",{"_index":367,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyrole",{"_index":360,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyrole(role",{"_index":369,"title":{},"body":{"injectables/UsersService.html":{}}}],["findproductbyuserid",{"_index":285,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductbyuserid(id",{"_index":296,"title":{},"body":{"injectables/ProductService.html":{}}}],["focus",{"_index":508,"title":{},"body":{"index.html":{}}}],["follow",{"_index":543,"title":{},"body":{"index.html":{}}}],["framework",{"_index":442,"title":{},"body":{"index.html":{}}}],["full",{"_index":538,"title":{},"body":{"index.html":{}}}],["function",{"_index":407,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":436,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":503,"title":{},"body":{"index.html":{}}}],["get('all",{"_index":243,"title":{},"body":{"controllers/ProductController.html":{}}}],["get('byrole/:role",{"_index":347,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('byrole/:role')@useguards(jwtauthguard",{"_index":337,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('me",{"_index":273,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["get('me')@useguards(jwtauthguard",{"_index":334,"title":{},"body":{"controllers/UsersController.html":{}}}],["getallproducts",{"_index":232,"title":{},"body":{"controllers/ProductController.html":{}}}],["getallproducts(search",{"_index":239,"title":{},"body":{"controllers/ProductController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getproductbyuserid",{"_index":233,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproductbyuserid(@req",{"_index":274,"title":{},"body":{"controllers/ProductController.html":{}}}],["getproductbyuserid(req",{"_index":247,"title":{},"body":{"controllers/ProductController.html":{}}}],["getting",{"_index":438,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":329,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(@req",{"_index":345,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(req",{"_index":333,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyrole",{"_index":330,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyrole(@param('role",{"_index":348,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyrole(role",{"_index":336,"title":{},"body":{"controllers/UsersController.html":{}}}],["graph",{"_index":530,"title":{},"body":{"index.html":{}}}],["grow",{"_index":553,"title":{},"body":{"index.html":{}}}],["hands",{"_index":524,"title":{},"body":{"index.html":{}}}],["handy",{"_index":514,"title":{},"body":{"index.html":{}}}],["hashed_password",{"_index":379,"title":{},"body":{"injectables/UsersService.html":{}}}],["hello",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":528,"title":{},"body":{"index.html":{}}}],["here",{"_index":561,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":567,"title":{},"body":{"index.html":{}}}],["id",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":213,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":226,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/SignInWithCredentialDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/SignInWithCredentialDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/SignInWithCredentialDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":487,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":511,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":52,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":53,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["insensitive",{"_index":316,"title":{},"body":{"injectables/ProductService.html":{}}}],["install",{"_index":502,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":458,"title":{},"body":{"index.html":{}}}],["interact",{"_index":531,"title":{},"body":{"index.html":{}}}],["internalservererrorexception",{"_index":372,"title":{},"body":{"injectables/UsersService.html":{}}}],["invalid",{"_index":188,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":173,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInWithCredentialDto.html":{}}}],["isenum",{"_index":176,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInWithCredentialDto.html":{}}}],["isenum(role",{"_index":186,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumber",{"_index":168,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isstring",{"_index":174,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInWithCredentialDto.html":{}}}],["isstring()@minlength(3",{"_index":165,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@minlength(6",{"_index":184,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInWithCredentialDto.html":{}}}],["job",{"_index":546,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":548,"title":{},"body":{"index.html":{}}}],["join",{"_index":559,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":209,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":76,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":211,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":91,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":564,"title":{},"body":{"index.html":{}}}],["key",{"_index":477,"title":{},"body":{"index.html":{}}}],["later",{"_index":399,"title":{},"body":{"injectables/UsersService.html":{}}}],["learn",{"_index":517,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":570,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":551,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":545,"title":{},"body":{"index.html":{}}}],["literal",{"_index":293,"title":{},"body":{"injectables/ProductService.html":{}}}],["login",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(userdata",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{}}}],["looking",{"_index":488,"title":{},"body":{"index.html":{}}}],["loop",{"_index":541,"title":{},"body":{"index.html":{}}}],["makes",{"_index":496,"title":{},"body":{"index.html":{}}}],["managing",{"_index":510,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/SignInWithCredentialDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":492,"title":{},"body":{"index.html":{}}}],["maxprice",{"_index":241,"title":{},"body":{"controllers/ProductController.html":{}}}],["message",{"_index":187,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":175,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInWithCredentialDto.html":{}}}],["minlength(3",{"_index":178,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":193,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInWithCredentialDto.html":{}}}],["minprice",{"_index":240,"title":{},"body":{"controllers/ProductController.html":{}}}],["miscellaneous",{"_index":435,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":550,"title":{},"body":{"index.html":{}}}],["mode",{"_index":315,"title":{},"body":{"injectables/ProductService.html":{},"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/products/product.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":486,"title":{},"body":{"index.html":{}}}],["msg",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["myśliwiec",{"_index":565,"title":{},"body":{"index.html":{}}}],["name",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":536,"title":{},"body":{"index.html":{}}}],["nest",{"_index":450,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":569,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":475,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mau",{"_index":504,"title":{},"body":{"index.html":{}}}],["nestjs/passport",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":441,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":373,"title":{},"body":{"injectables/UsersService.html":{}}}],["npm",{"_index":457,"title":{},"body":{"index.html":{}}}],["null",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":167,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["number(maxprice",{"_index":272,"title":{},"body":{"controllers/ProductController.html":{}}}],["number(minprice",{"_index":270,"title":{},"body":{"controllers/ProductController.html":{}}}],["occurred",{"_index":395,"title":{},"body":{"injectables/UsersService.html":{}}}],["offer",{"_index":547,"title":{},"body":{"index.html":{}}}],["official",{"_index":493,"title":{},"body":{"index.html":{}}}],["ok",{"_index":306,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["onmoduleinit",{"_index":224,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":552,"title":{},"body":{"index.html":{}}}],["optional",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":574,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":415,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":250,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["part",{"_index":537,"title":{},"body":{"index.html":{}}}],["pass",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":208,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":205,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":200,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/SignInWithCredentialDto.html":{},"injectables/UsersService.html":{}}}],["payload",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":219,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":218,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.role",{"_index":220,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["platform",{"_index":491,"title":{},"body":{"index.html":{}}}],["please",{"_index":397,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["possible",{"_index":483,"title":{},"body":{"index.html":{}}}],["post",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["post('create",{"_index":261,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["post('sign",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgresql",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["prefix",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":162,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["prisma",{"_index":288,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["prisma/client",{"_index":172,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":281,"title":{},"body":{"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["prismaclient",{"_index":223,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":280,"title":{},"body":{"modules/ProductModule.html":{},"modules/UsersModule.html":{}}}],["prismaservice",{"_index":221,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["private",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["process.env.jwt_secret",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["product",{"_index":299,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.controller",{"_index":282,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":257,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["product.dto.ts",{"_index":160,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:10",{"_index":169,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:14",{"_index":171,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:17",{"_index":170,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:7",{"_index":166,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.service",{"_index":255,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["productcontroller",{"_index":228,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productdata",{"_index":238,"title":{},"body":{"controllers/ProductController.html":{}}}],["production",{"_index":464,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":41,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":230,"title":{},"body":{"controllers/ProductController.html":{}}}],["productservice",{"_index":254,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":440,"title":{},"body":{"index.html":{}}}],["project",{"_index":454,"title":{},"body":{"index.html":{}}}],["promise",{"_index":291,"title":{},"body":{"injectables/ProductService.html":{}}}],["properties",{"_index":161,"title":{"properties.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInWithCredentialDto.html":{},"properties.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["quantity",{"_index":163,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["query",{"_index":251,"title":{},"body":{"controllers/ProductController.html":{}}}],["query('maxprice",{"_index":267,"title":{},"body":{"controllers/ProductController.html":{}}}],["query('minprice",{"_index":266,"title":{},"body":{"controllers/ProductController.html":{}}}],["query('search",{"_index":265,"title":{},"body":{"controllers/ProductController.html":{}}}],["query('sellerid",{"_index":268,"title":{},"body":{"controllers/ProductController.html":{}}}],["questions",{"_index":518,"title":{},"body":{"index.html":{}}}],["read",{"_index":560,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{}}}],["ready",{"_index":473,"title":{},"body":{"index.html":{}}}],["real",{"_index":532,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":453,"title":{},"body":{"index.html":{}}}],["req",{"_index":235,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["req.user?.userid",{"_index":263,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["request",{"_index":252,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["requiring",{"_index":499,"title":{},"body":{"index.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resource",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["resources",{"_index":512,"title":{},"body":{"index.html":{}}}],["result",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/SignInWithCredentialDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role.seller",{"_index":387,"title":{},"body":{"injectables/UsersService.html":{}}}],["run",{"_index":459,"title":{},"body":{"index.html":{}}}],["runs",{"_index":481,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":445,"title":{},"body":{"index.html":{}}}],["search",{"_index":245,"title":{},"body":{"controllers/ProductController.html":{}}}],["secret",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":215,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seller",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["sellerid",{"_index":242,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["server",{"_index":446,"title":{},"body":{"index.html":{}}}],["setup",{"_index":455,"title":{},"body":{"index.html":{}}}],["side",{"_index":447,"title":{},"body":{"index.html":{}}}],["signinwithcredentialdto",{"_index":64,"title":{"classes/SignInWithCredentialDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/SignInWithCredentialDto.html":{},"coverage.html":{}}}],["signoptions",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":501,"title":{},"body":{"index.html":{}}}],["sku",{"_index":164,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/ProductService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/SignInWithCredentialDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":555,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["src/database/prisma.service",{"_index":298,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["src/database/prisma.service.ts",{"_index":222,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/database/prisma.service.ts:6",{"_index":225,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/main.ts",{"_index":406,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:12",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:13",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:22",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:7",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/dto/sign",{"_index":322,"title":{},"body":{"classes/SignInWithCredentialDto.html":{},"coverage.html":{}}}],["src/modules/auth/jwt",{"_index":194,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts",{"_index":199,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/jwt.strategy.ts:15",{"_index":204,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/jwt.strategy.ts:6",{"_index":202,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/products/dto/create",{"_index":159,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/modules/products/product.controller.ts",{"_index":229,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/modules/products/product.controller.ts:15",{"_index":237,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/modules/products/product.controller.ts:21",{"_index":244,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/modules/products/product.controller.ts:40",{"_index":249,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/modules/products/product.module.ts",{"_index":279,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/modules/products/product.service.ts",{"_index":283,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/modules/products/product.service.ts:12",{"_index":290,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/modules/products/product.service.ts:58",{"_index":294,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/modules/products/product.service.ts:88",{"_index":297,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/modules/products/product.service.ts:9",{"_index":287,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/modules/users/dto/create",{"_index":180,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts",{"_index":327,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:15",{"_index":332,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:21",{"_index":335,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.controller.ts:28",{"_index":338,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.module.ts",{"_index":353,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":355,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:11",{"_index":366,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:15",{"_index":368,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:19",{"_index":364,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:23",{"_index":370,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:27",{"_index":363,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:8",{"_index":361,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":461,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":463,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":465,"title":{},"body":{"index.html":{}}}],["started",{"_index":439,"title":{"index.html":{}},"body":{}}],["starter",{"_index":452,"title":{},"body":{"index.html":{}}}],["statements",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":307,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["stay",{"_index":540,"title":{},"body":{"index.html":{}}}],["steps",{"_index":478,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":497,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":207,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/SignInWithCredentialDto.html":{},"injectables/UsersService.html":{}}}],["successful",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":389,"title":{},"body":{"injectables/UsersService.html":{}}}],["super",{"_index":210,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":519,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":572,"title":{},"body":{"modules.html":{}}}],["table",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":479,"title":{},"body":{"index.html":{}}}],["test",{"_index":468,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":471,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":470,"title":{},"body":{"index.html":{}}}],["tests",{"_index":466,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":554,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":227,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this._authservice.login(userdata",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["this._productservice.createproduct(productdata",{"_index":264,"title":{},"body":{"controllers/ProductController.html":{}}}],["this._productservice.findallproducts",{"_index":269,"title":{},"body":{"controllers/ProductController.html":{}}}],["this._productservice.findproductbyuserid(userid",{"_index":275,"title":{},"body":{"controllers/ProductController.html":{}}}],["this._usersservice.create(userdata",{"_index":344,"title":{},"body":{"controllers/UsersController.html":{}}}],["this._usersservice.findbyid(userid",{"_index":346,"title":{},"body":{"controllers/UsersController.html":{}}}],["this._usersservice.findbyrole(role",{"_index":349,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.findbyemail(createuserdto.email",{"_index":377,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.jwtservice.sign(payload",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.product.findmany",{"_index":311,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique",{"_index":302,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.user.create",{"_index":382,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":375,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":374,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.findbyemail(email",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validateuser(user.email",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["time",{"_index":533,"title":{},"body":{"index.html":{}}}],["touch",{"_index":562,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":390,"title":{},"body":{"injectables/UsersService.html":{}}}],["try",{"_index":378,"title":{},"body":{"injectables/UsersService.html":{}}}],["twitter",{"_index":568,"title":{},"body":{"index.html":{}}}],["type",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/SignInWithCredentialDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typeorm",{"_index":300,"title":{},"body":{"injectables/ProductService.html":{},"dependencies.html":{}}}],["typescript",{"_index":451,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('invalid",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('you",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":271,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["unexpected",{"_index":394,"title":{},"body":{"injectables/UsersService.html":{}}}],["unit",{"_index":467,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":579,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":542,"title":{},"body":{"index.html":{}}}],["useguards",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":260,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get('me",{"_index":248,"title":{},"body":{"controllers/ProductController.html":{}}}],["useguards(jwtauthguard)@post('create",{"_index":236,"title":{},"body":{"controllers/ProductController.html":{}}}],["user",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":339,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":181,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":182,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:14",{"_index":185,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":192,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":183,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_auth",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_auth.email",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_auth.id",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_auth.name",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_auth.role",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["userid",{"_index":217,"title":{},"body":{"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UsersController.html":{}}}],["users.controller",{"_index":354,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":340,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["users/users.service",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["userscontroller",{"_index":326,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":42,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":112,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":534,"title":{},"body":{"index.html":{}}}],["validate",{"_index":201,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":203,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":177,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInWithCredentialDto.html":{},"dependencies.html":{}}}],["values",{"_index":190,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["version",{"_index":578,"title":{},"body":{"properties.html":{}}}],["video",{"_index":526,"title":{},"body":{"index.html":{}}}],["visit",{"_index":516,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":529,"title":{},"body":{"index.html":{}}}],["watch",{"_index":462,"title":{},"body":{"index.html":{}}}],["website",{"_index":566,"title":{},"body":{"index.html":{}}}],["where.or",{"_index":313,"title":{},"body":{"injectables/ProductService.html":{}}}],["where.price",{"_index":319,"title":{},"body":{"injectables/ProductService.html":{}}}],["where.price.gte",{"_index":320,"title":{},"body":{"injectables/ProductService.html":{}}}],["where.price.lte",{"_index":321,"title":{},"body":{"injectables/ProductService.html":{}}}],["working",{"_index":515,"title":{},"body":{"index.html":{}}}],["world",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":544,"title":{},"body":{"index.html":{}}}],["yes",{"_index":246,"title":{},"body":{"controllers/ProductController.html":{}}}],["you'd",{"_index":558,"title":{},"body":{"index.html":{}}}],["you're",{"_index":472,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './modules/users/users.module';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { ProductModule } from './modules/products/product.module';\n\n@Module({\n  imports: [UsersModule, AuthModule, ProductModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(userData: SignInWithCredentialDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('sign-with-credentials')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/auth/auth.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            SignInWithCredentialDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, UseGuards } from \"@nestjs/common\";\nimport { JwtAuthGuard } from \"../auth/jwt-auth.guard\";\nimport { AuthService } from \"./auth.service\";\nimport { SignInWithCredentialDto } from \"./dto/sign-with-credential.dto\";\n\n@Controller('auth')\nexport class AuthController {\n\n  constructor(private readonly _authService: AuthService) { }\n\n  @Post('sign-with-credentials')\n  login(@Body() userData: SignInWithCredentialDto) {\n    return this._authService.login(userData);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from '../users/users.module';\n\n@Module({\n  imports: [\n    PassportModule,\n    JwtModule.register({\n      secret: process.env.JWT_SECRET || 'defaultSecretKey',\n      signOptions: { expiresIn: '1h' },\n    }), \n    UsersModule\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/auth.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport * as bcrypt from 'bcrypt';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n  ) {}\n\n  async validateUser(email: string, pass: string) {\n    const user = await this.usersService.findByEmail(email);\n    if (user && (await bcrypt.compare(pass, user.password))) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(user: any) {\n    const USER_AUTH = await this.validateUser(user.email, user.password);\n\n    console.log('USER_AUTH:', USER_AUTH);\n    \n\n    if (!USER_AUTH) {\n      throw new UnauthorizedException('Invalid credentials');\n    }\n\n    if (USER_AUTH.role !== 'SELLER') {\n      throw new UnauthorizedException('You are not authorized to access this resource');\n    }\n    \n    const payload = { \n      email: USER_AUTH.email, \n      id: USER_AUTH.id, \n      role: USER_AUTH.role, \n      name: USER_AUTH.name \n    };\n    return {\n      access_token: this.jwtService.sign(payload),\n      msg: 'Login successful',\n      user: USER_AUTH\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                sku\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        sku\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/products/dto/create-product.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from '@prisma/client';\nimport { IsEmail, IsString, MinLength, IsEnum, IsNumber } from 'class-validator';\n\nexport class CreateProductDto {\n  @IsString()\n  @MinLength(3)\n  name: string;\n\n  @IsNumber()\n  price: number;\n\n  @IsString()\n  @MinLength(3)\n  sku: string;\n\n  @IsNumber()\n  quantity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    Optional\n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Role, {message: 'Invalid role. Allowed values: BUYER, SELLER'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from '@prisma/client';\nimport { IsEmail, IsString, MinLength, IsEnum } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @MinLength(3)\n  name: string;\n\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @MinLength(6)\n  password: string;\n\n  @IsEnum(Role, { message: 'Invalid role. Allowed values: BUYER, SELLER' })\n  role?: Role; \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/auth/jwt.strategy.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET || 'defaultSecretKey',\n    });\n  }\n\n  async validate(payload: any) {\n    console.log('Payload:', payload);\n    \n    return { userId: payload.id, email: payload.email, role: payload.role };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/database/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createProduct\n                            \n                            \n                                    \n                                    Async\n                                getAllProducts\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getProductByUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(productData: CreateProductDto, req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Post('create')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/product.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productData\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllProducts(search?: string, minPrice?: string, maxPrice?: string, sellerId?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/product.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                search\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                minPrice\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                maxPrice\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                sellerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getProductByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProductByUserId(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('me')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/products/product.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Query, Req, Search, UseGuards } from \"@nestjs/common\";\nimport { Request } from \"express\";\nimport { JwtAuthGuard } from \"../auth/jwt-auth.guard\";\nimport { ProductService } from \"./product.service\";\nimport { CreateProductDto } from \"./dto/create-product.dto\";\n\n@Controller('products')\nexport class ProductController {\n\n  constructor(\n    private readonly _productService: ProductService,\n  ) { }\n  @UseGuards(JwtAuthGuard)\n  @Post('create')\n  async createProduct(@Body() productData: CreateProductDto, @Req() req: Request & { user?: any }) {\n    const userId = req.user?.userId;\n    return this._productService.createProduct(productData, userId);\n  }\n\n  @Get('all')\n  async getAllProducts(\n    @Query('search') search?: string,\n    @Query('minPrice') minPrice?: string,\n    @Query('maxPrice') maxPrice?: string,\n    @Query('sellerId') sellerId?: string,\n  ) {\n    if (sellerId) {\n      return this._productService.findAllProducts({ sellerId });\n    }\n\n    return this._productService.findAllProducts({\n      search,\n      minPrice: minPrice ? Number(minPrice) : undefined,\n      maxPrice: maxPrice ? Number(maxPrice) : undefined,\n    });\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('me')\n  async getProductByUserId(@Req() req: Request & { user?: any }) {\n    const userId = req.user?.userId;\n    return this._productService.findProductByuserId(userId);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_ProductModule_exports\n\n\n\n\nProductService \n\nProductService \n\n\n\nProductModule\n\nProductModule\n\nProductService  -->\n\nProductModule->ProductService \n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/products/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PrismaModule } from \"prisma/prisma.module\";\nimport { ProductController } from \"./product.controller\";\nimport { ProductService } from \"./product.service\";\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [ProductController],\n  providers: [ProductService],\n  exports: [ProductService],\n})\n\nexport class ProductModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                findAllProducts\n                            \n                            \n                                    Async\n                                findProductByuserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/products/product.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                        \n                    createProduct(createProductDto: CreateProductDto, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/product.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllProducts(filters: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/product.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filters\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findProductByuserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductByuserId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/products/product.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PrismaService } from \"src/database/prisma.service\";\nimport { CreateProductDto } from \"./dto/create-product.dto\";\nimport { Product } from \"@prisma/client\";\nimport { In } from \"typeorm\";\nimport { Injectable } from \"@nestjs/common\";\n\n\n@Injectable()\nexport class ProductService {\n  constructor(private readonly prisma: PrismaService) { }\n\n  async createProduct(createProductDto: CreateProductDto, userId: string): Promise {\n    const existingProduct = await this.prisma.product.findUnique({\n      where: { sku: createProductDto.sku },\n    });\n\n    if (existingProduct) {\n      return {\n        message: \"Product already exists\",\n        ok: false,\n        statusCode: 409,\n      }\n    }\n\n    if (createProductDto.price  {\n  if (filters.sellerId) {\n    return this.prisma.product.findMany({\n      where: { sellerId: filters.sellerId },\n    });\n  }\n\n  const where: any = {};\n\n  if (filters.search) {\n    where.OR = [\n      { name: { contains: filters.search, mode: 'insensitive' } },\n      { sku: { contains: filters.search, mode: 'insensitive' } },\n    ];\n  }\n\n  if (filters.minPrice !== undefined || filters.maxPrice !== undefined) {\n    where.price = {};\n    if (filters.minPrice !== undefined) where.price.gte = filters.minPrice;\n    if (filters.maxPrice !== undefined) where.price.lte = filters.maxPrice;\n  }\n\n  return this.prisma.product.findMany({ where });\n}\n\n  async findProductByuserId(id: string): Promise {\n    return this.prisma.product.findMany({\n      where: {\n        sellerId: id,\n      },\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInWithCredentialDto.html":{"url":"classes/SignInWithCredentialDto.html","title":"class - SignInWithCredentialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInWithCredentialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/sign-with-credential.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/sign-with-credential.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/sign-with-credential.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsEnum, IsString, MinLength } from \"class-validator\";\n\nexport class SignInWithCredentialDto {\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @MinLength(6)\n  password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUserById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUserByRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(userData: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create')\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('me')@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserByRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserByRole(role: Role)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('byRole/:role')@UseGuards(JwtAuthGuard)\n                \n            \n\n                    \n                        \n                            Defined in src/modules/users/users.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                        Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, Req, UseGuards, Request } from \"@nestjs/common\";\nimport { CreateUserDto } from \"./dto/create-user.dto\";\nimport { JwtAuthGuard } from \"../auth/jwt-auth.guard\";\nimport { UsersService } from \"./users.service\";\nimport { Role } from \"@prisma/client\";\n\n@Controller('user')\nexport class UsersController {\n\n  constructor(\n    private readonly _usersService: UsersService,\n  ) { }\n\n  @Post('create')\n  async createUser(@Body() userData: CreateUserDto) {\n    return this._usersService.create(userData);\n  }\n\n  @Get('me')\n  @UseGuards(JwtAuthGuard)\n  async getUserById(@Req() req: any) {\n    const userId = req.user?.userId;    \n    return this._usersService.findById(userId);\n  }\n\n  @Get('byRole/:role')\n  @UseGuards(JwtAuthGuard)\n  async getUserByRole(@Param('role') role: Role) {\n    return this._usersService.findByRole(role);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { UsersController } from \"./users.controller\";\nimport { UsersService } from \"./users.service\";\nimport { PrismaModule } from \"prisma/prisma.module\";\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  imports: [PrismaModule],\n  exports: [UsersService],\n})\n\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByRole(role: Role)\n                \n            \n\n\n                    \n                        \n                            Defined in src/modules/users/users.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                role\n                                            \n                                                        Role\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable, InternalServerErrorException, NotFoundException } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { PrismaService } from 'src/database/prisma.service';\nimport * as bcrypt from 'bcrypt';\nimport { Role, User } from '@prisma/client';\n\n@Injectable()\nexport class UsersService {\n  constructor(private prisma: PrismaService) { }\n\n  async findByEmail(email: string) {\n    return this.prisma.user.findUnique({ where: { email } });\n  }\n\n  async findById(id: string) {\n    return this.prisma.user.findUnique({ where: { id } });\n  }\n\n  async findAll() {\n    return this.prisma.user.findMany();\n  }\n\n  async findByRole(role: Role) {\n    return this.prisma.user.findMany({ where: { role } });\n  }\n\n  async create(createUserDto: CreateUserDto) {\n    const EXISTING_USER = await this.findByEmail(createUserDto.email);\n    if (EXISTING_USER) {\n      return {\n        message: 'User already exists',\n        ok: false,\n        statusCode: 409,\n      }\n    }\n\n    try {      \n      const HASHED_PASSWORD = await bcrypt.hash(createUserDto.password, 5);\n      await this.prisma.user.create({ data: {\n        name: createUserDto.name,\n        email: createUserDto.email,\n        password: HASHED_PASSWORD,\n        role: createUserDto.role || Role.SELLER,\n      } });\n\n      return {\n        message: 'User created successfully',\n        ok: true,\n      };\n    } catch (error) {\n      throw new Error('An unexpected error occurred while creating the user. Please try again later.' + error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/database/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/sign-with-credential.dto.ts\n            \n            class\n            SignInWithCredentialDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/products/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/products/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/products/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/passport : ^11.0.5\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @prisma/client : ^6.7.0\n        \n            bcrypt : ^6.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            passport-jwt : ^4.0.1\n        \n            postgresql : ^0.0.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.24\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_exports\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nProductService \n\nProductService \n\nProductService  -->\n\nProductModule->ProductService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
